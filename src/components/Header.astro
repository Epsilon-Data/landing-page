---
import Logo from "./Logo.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

const features = await getCollection("feature");
---

<nav
  class="flex flex-col items-center w-full sticky top-0 z-50 shadow-md"
  aria-label="Main navigation"
>
  <div
    class="flex flex-wrap justify-between items-center gap-y-2 py-3 w-full h-[76px] px-5 tablet:px-10 bg-black/75 backdrop-blur-md"
  >
    <div class="flex items-center gap-1">
      <a href="/" class="flex items-center gap-2" aria-label="Epsilon home">
        <Logo />
        <h1 class="text-2xl tablet:text-4xl font-bold tracking-tighter text-neutral-50">
          epsilon
        </h1>
      </a>
    </div>
    <div
      class="hidden tablet:flex gap-1 justify-center items-center"
      role="navigation"
      aria-label="Main menu"
    >
      <div class="relative group">
        <div
          id="features-link"
          class="nav-link flex items-center gap-1 px-4 pt-3.5 pb-3 h-12 text-base font-medium leading-6 text-center rounded-lg cursor-pointer text-neutral-100"
        >
          Features
          <span
            id="features-icon"
            class="transition-transform duration-300 ml-1"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 16 16"
              fill="currentColor"
              class="w-4 h-4"
            >
              <path
                fill-rule="evenodd"
                d="M11.78 9.78a.75.75 0 0 1-1.06 0L8 7.06 5.28 9.78a.75.75 0 0 1-1.06-1.06l3.25-3.25a.75.75 0 0 1 1.06 0l3.25 3.25a.75.75 0 0 1 0 1.06Z"
                clip-rule="evenodd"></path>
            </svg>
          </span>
        </div>
        <div
          id="features-dropdown"
          class="absolute drop-shadow-2xl shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur-md top-full left-1/2 -translate-x-1/2 mt-8 rounded-xl bg-black/75 p-8 border border-white/20 z-50 opacity-0 scale-95 pointer-events-none transition-all duration-300 ease-out [font-family:'Maven_Pro'] font-medium inline-block tablet:w-xl"
        >
          <div class="grid grid-cols-1 tablet:grid-cols-2 gap-x-4 gap-y-2">
            {
              features.slice(0, 4).map((feature) => (
                <a
                  href={`/feature/${feature.slug}`}
                  class="flex items-start gap-2 px-4 py-2 text-sm text-gray-400 hover:text-white rounded max-w-xs leading-snug"
                >
                  <Image
                    src={feature.data.icon}
                    alt="feature-icon"
                    class="w-5 h-5 flex-shrink-0"
                  />
                  <span class="line-clamp-2 text-left">{feature.data.nav}</span>
                </a>
              ))
            }
            {
              features.slice(4, 8).map((feature) => (
                <a
                  href={`/feature/${feature.slug}`}
                  class="flex items-start gap-2 px-4 py-2 text-sm text-gray-400 hover:text-white rounded max-w-xs leading-snug"
                >
                  <Image
                    src={feature.data.icon}
                    alt="feature-icon"
                    class="w-5 h-5 flex-shrink-0"
                  />
                  <span class="line-clamp-2 text-left">{feature.data.nav}</span>
                </a>
              ))
            }
          </div>
        </div>
      </div>
      <!-- <a
        href="/about"
        class="nav-link gap-1 px-4 pt-3.5 pb-3 h-12 text-base font-medium leading-6 text-center rounded-lg cursor-pointer text-neutral-100"
      >
        About Us
      </a>
      <a
        href="/help"
        class="nav-link gap-1 px-4 pt-3.5 pb-3 h-12 text-base font-medium leading-6 text-center rounded-lg cursor-pointer text-neutral-100"
      >
        Help
      </a> -->
    </div>

    <!-- Authentication buttons -->
    <div class="hidden tablet:flex gap-4 items-center max-sm:gap-2 px-10">
      <button
        type="button"
        class="px-4 py-2 h-10 text-base font-medium rounded-lg cursor-pointer bg-[rgba(245,245,245,0.15)] text-neutral-100 w-[92px] hover:bg-opacity-20 focus:outline-none focus:ring-2 focus:ring-neutral-400"
        aria-label="Sign In"
      >
        Sign In
      </button>
      <button
        type="button"
        class="flex gap-2 justify-center items-center p-2 w-40 rounded-lg cursor-pointer max-sm:w-auto hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-neutral-400 bg-[linear-gradient(135deg,_#1481F1_39.75%,_#014FE9_87.11%)]"
        aria-label="Get Started"
      >
        <span
          class="text-base font-medium leading-6 text-center text-neutral-50"
        >
          Get Started
        </span>
        <svg
          width="24"
          height="25"
          viewBox="0 0 24 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          class="chevron-right"
          aria-hidden="true"
        >
          <g clip-path="url(#clip0_595_1301)">
            <path
              d="M8.29492 7.82504L12.8749 12.415L8.29492 17.005L9.70492 18.415L15.7049 12.415L9.70492 6.41504L8.29492 7.82504Z"
              fill="#F5F5F5"></path>
          </g>
          <defs>
            <clipPath id="clip0_595_1301">
              <rect
                width="24"
                height="24"
                fill="white"
                transform="translate(0 0.119995)"></rect>
            </clipPath>
          </defs>
        </svg>
      </button>
    </div>

    <!-- Mobile menu button (hidden in the design but added for completeness) -->
    <button
      id="mobile-menu-button"
      type="button"
      class="tablet:hidden p-2 rounded-md text-neutral-100 hover:bg-neutral-700"
      aria-expanded="false"
      aria-controls="mobile-menu"
      aria-label="Toggle mobile menu"
    >
      <div class="menu-icon space-y-1.5">
        <span class="block h-0.5 w-6 bg-white transition-transform duration-300 origin-top-left rounded-xl"></span>
        <span class="block h-0.5 w-6 bg-white transition-opacity duration-300 rounded-xl"></span>
        <span class="block h-0.5 w-6 bg-white transition-transform duration-300 origin-bottom-left rounded-xl"></span>
      </div>
    </button>
  </div>

  <!-- Mobile menu -->
  <div
    id="mobile-menu"
    class="hidden w-full px-5 py-3 bg-black/75 backdrop-blur-md tablet:hidden"
    aria-label="Mobile navigation"
  >
    <div class="flex flex-col space-y-2">
      <!-- Features expandable item -->
      <div class="group">
        <button
          id="mobile-features-toggle"
          type="button"
          class="flex items-center justify-between w-full px-4 py-2 text-base font-medium text-neutral-100 rounded-lg hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-neutral-400"
        >
          Features
          <svg
            class="w-5 h-5 transition-transform duration-200"
            id="mobile-chevron-icon"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div
          id="mobile-features-dropdown"
          class="flex flex-col mt-2 pl-4 space-y-1"
        >
          {
            features.map((feature) => (
              <a
                href={`/feature/${feature.slug}`}
                class="text-sm text-neutral-300 hover:text-white px-2 py-1 rounded"
              >
                {feature.data.nav}
              </a>
            ))
          }
        </div>
      </div>

      <!-- Other menu items -->
      <!-- <a
        href="/about"
        class="px-4 py-2 text-base font-medium text-neutral-100 rounded-lg hover:bg-neutral-700"
      >
        About Us
      </a>
      <a
        href="/help"
        class="px-4 py-2 text-base font-medium text-neutral-100 rounded-lg hover:bg-neutral-700"
      >
        Help
      </a> -->
      <div class="flex-col items-center">
        <button
          type="button"
          class="px-4 py-2 text-base font-medium rounded-lg cursor-pointer bg-[rgba(245,245,245,0.15)] text-neutral-100 hover:bg-opacity-20 focus:outline-none focus:ring-2 focus:ring-neutral-400 w-full mb-3"
          aria-label="Sign In"
        >
          Sign In
        </button>
        <button
          type="button"
          class="flex justify-center items-center p-2 w-full rounded-lg cursor-pointer max-sm:w-auto hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-neutral-400 bg-[linear-gradient(135deg,_#1481F1_39.75%,_#014FE9_87.11%)]"
          aria-label="Get Started"
        >
          <span
            class="text-base font-medium leading-6 text-center text-neutral-50"
          >
            Get Started
          </span>
          <svg
            width="24"
            height="25"
            viewBox="0 0 24 25"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="chevron-right"
            aria-hidden="true"
          >
            <g clip-path="url(#clip0_595_1301)">
              <path
                d="M8.29492 7.82504L12.8749 12.415L8.29492 17.005L9.70492 18.415L15.7049 12.415L9.70492 6.41504L8.29492 7.82504Z"
                fill="#F5F5F5"></path>
            </g>
            <defs>
              <clipPath id="clip0_595_1301">
                <rect
                  width="24"
                  height="24"
                  fill="white"
                  transform="translate(0 0.119995)"></rect>
              </clipPath>
            </defs>
          </svg>
        </button>
      </div>
    </div>
  </div>
  <script type="module">
    function initDropdown() {
      const link = document.getElementById("features-link");
      const icon = document.getElementById("features-icon");
      const dropdown = document.getElementById("features-dropdown");

      if (!link || !icon || !dropdown) return;

      let toggled = false;

      const upSVG = `
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
          <path fill-rule="evenodd" d="M11.78 9.78a.75.75 0 0 1-1.06 0L8 7.06 5.28 9.78a.75.75 0 0 1-1.06-1.06l3.25-3.25a.75.75 0 0 1 1.06 0l3.25 3.25a.75.75 0 0 1 0 1.06Z" clip-rule="evenodd" />
        </svg>
      `;

      const downSVG = `
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
          <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
        </svg>
      `;

      const openDropdown = () => {
        dropdown.classList.remove(
          "opacity-0",
          "scale-95",
          "pointer-events-none"
        );
        dropdown.classList.add(
          "opacity-100",
          "scale-100",
          "pointer-events-auto"
        );
        icon.innerHTML = downSVG;
      };

      const closeDropdown = () => {
        dropdown.classList.add("opacity-0", "scale-95", "pointer-events-none");
        dropdown.classList.remove(
          "opacity-100",
          "scale-100",
          "pointer-events-auto"
        );
        icon.innerHTML = upSVG;
      };

      link.addEventListener("click", (e) => {
        e.preventDefault();
        toggled = !toggled;
        toggled ? openDropdown() : closeDropdown();
      });

      document.addEventListener("click", (e) => {
        if (!link.contains(e.target) && !dropdown.contains(e.target)) {
          toggled = false;
          closeDropdown();
        }
      });
    }

    function initMobileDropdown() {
      const mobileMenuBtn = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");
      const mobileFeaturesToggle = document.getElementById(
        "mobile-features-toggle"
      );
      const mobileDropdown = document.getElementById(
        "mobile-features-dropdown"
      );
      const mobileChevron = document.getElementById("mobile-chevron-icon");

      // Show menu
      mobileMenuBtn?.addEventListener("click", () => {
        const wasHidden = mobileMenu.classList.contains("hidden");
        mobileMenu.classList.toggle("hidden");

        // Toggle icon animation class
        mobileMenuBtn.classList.toggle("open");

        // Automatically expand Features dropdown when opening mobile menu
        if (wasHidden) {
          mobileDropdown?.classList.remove("hidden");
          mobileChevron?.classList.add("rotate-180");
        }
      });

      // Toggle Features dropdown
      mobileFeaturesToggle?.addEventListener("click", () => {
        mobileDropdown?.classList.toggle("hidden");
        mobileChevron?.classList.toggle("rotate-180");
      });
    }

    document.addEventListener("DOMContentLoaded", () => {
      initDropdown();
      initMobileDropdown();
    });

    document.addEventListener("astro:after-swap", () => {
      initDropdown();
      initMobileDropdown();
    });
  </script>
</nav>
