---
interface AccordionItem {
  title: string;
  content: string;
  icon: string;
}

const { items = [] }: { items: AccordionItem[] } = Astro.props as { items: AccordionItem[] };
---

<div class="w-full [font-family:'Maven_Pro']">
  {items.map((item, index) => (
    <div class="border-l-2 border-gray-400">
      <button 
        class="w-full flex items-center mt-5 text-slate-800"
        data-index={index}
        class:list-item
      >
        <span id={`icon-${index}`} class="text-slate-800 transition-transform duration-300 pl-2">
          <object type="image/svg+xml" data={item.icon} class="w-4 h-4 icon-container" id={`icon-${index}`} />
        </span>
        <span id={`title-${index}`} class="pl-2">{item.title}</span>
      </button>
      <div id={`content-${index}`} class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out">
        <div class="pl-8 pt-2 text-sm text-slate-500">
          {item.content}
        </div>
      </div>
    </div>
  ))}
</div>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll("button[data-index]");

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const index = btn.getAttribute("data-index");
        const title = document.getElementById(`title-${index}`);
        const content = document.getElementById(`content-${index}`);
        const icon = document.getElementById(`icon-${index}`);

        if (!content || !icon) return;

        if (content.style.maxHeight && content.style.maxHeight !== "0px") {
          content.style.maxHeight = "0";
        } else {
          content.style.maxHeight = content.scrollHeight + "px";
        }
      });
    });
  });
</script>
